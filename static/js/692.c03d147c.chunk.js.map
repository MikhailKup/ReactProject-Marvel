{"version":3,"file":"static/js/692.c03d147c.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/errors/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Component } from 'react'\r\nimport CriticalErrorMessage from '../errors/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(err, errInfo) {\r\n\t\tconsole.log(err, errInfo)\r\n\t\tthis.setState({ error: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <CriticalErrorMessage/>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import img from './error.gif'\r\nimport './ErrorMessage.scss'\r\n\r\nconst CriticalErrorMessage = () => {\r\n\treturn (\r\n\t\t<div className=\"error-message\">\r\n\t\t\t<img src={img} alt=\"Error\" className='error-message'/>\r\n\t\t</div>\r\n  )\r\n};\r\n\r\nexport default CriticalErrorMessage;","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport CriticalErrorMessage from '../errors/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n\tswitch(process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner/>;\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\n\t\tcase 'confirmed':\n\t\t\treturn <Component/>;\n\t\tcase 'error':\n\t\t\treturn <CriticalErrorMessage/>\n\t\tdefault:\n\t\t\tthrow new Error();\n\t}\n};\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n    useEffect(() => {\n\t\tonRequest(offset, true)\n\t}, []);\n\t\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t}\n\n\tconst onComicsListLoaded = newComicsList => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset => offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.description}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n\t\t\t)\n\t\t})\n\t\treturn <ul className='comics__grid'>{items}</ul>\n\t}\n\n\treturn (\n\t\t\t<div className=\"comics__list\">\n\t\t\t\t\t{setContent(process, () => renderItems(comicsList), newItemLoading)}\n\t\t\t\t\t<button\n\t\t\tclassName='button button__main button__long'\n\t\t\tdisabled={newItemLoading}\n\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\tonClick={() => onRequest(offset)}\n\t\t>\n\t\t\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t\t\t</button>\n\t\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet'\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<div className='comics'>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Page with list of our comics\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<main>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<ComicsList></ComicsList>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, \r\n\theaders = {'Content-Type': 'application/json'}) => {\r\n\t\tsetProcess('loading')\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\treturn data\r\n\t\t} catch (error) {\r\n\t\t\tsetProcess('error')\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading')\r\n\t}, [])\r\n\r\n\treturn {request, process, clearError, setProcess}\r\n};\r\n\r\nexport default useHttp","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request, clearError, process, setProcess } = useHttp()\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=13fce9aab4e28128f7b9d466dbd48844'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 150)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tbigdescription: char.description\r\n\t\t\t? char.description\r\n\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items ? char.comics.items.slice(0, 10) : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description\r\n\t\t\t\t? `${comics.description.slice(0, 35)}...`\r\n\t\t\t\t: 'There is no description',\r\n\t\t\tbigdescription: comics.description\r\n\t\t\t? comics.description\r\n\t\t\t: 'There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { getAllCharacters, \r\n\t\t\t\t\tgetCharacter, \r\n\t\t\t\t\tclearError, \r\n\t\t\t\t\tgetAllComics, \r\n\t\t\t\t\tgetComic, \r\n\t\t\t\t\tgetCharacterByName, \r\n\t\t\t\t\tprocess,\r\n\t\t\t\t\tsetProcess }\r\n}\r\n\r\nexport default useMarvelService\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","errInfo","console","log","this","setState","render","CriticalErrorMessage","props","img","setContent","process","newItemLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","i","Link","to","concat","id","thumbnail","name","description","price","renderItems","disabled","style","display","onClick","ComicsPage","Helmet","content","useHttp","request","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","status","json","clearError","_apiBase","_apiKey","_transformCharacter","char","slice","bigdescription","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","prices","getAllCharacters","data","results","getCharacter","res","getComic","getCharacterByName"],"sourceRoot":""}