{"version":3,"file":"static/js/126.512b78b3.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errors/ErrorMessage.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charList/CharList.js","components/randomChar/RandomChar.js","components/pages/MainPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import { Component } from 'react'\r\nimport ErrorMessage from '../errors/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(err, errInfo) {\r\n\t\tconsole.log(err, errInfo)\r\n\t\tthis.setState({ error: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import img from './error.gif'\r\nimport './ErrorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<div className=\"error-message\">\r\n\t\t\t<img src={img} alt=\"Error\" className='error-message'/>\r\n\t\t</div>\r\n  )\r\n};\r\n\r\nexport default ErrorMessage","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react'\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errors/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\nimport Spinner from '../spinner/Spinner'\nimport './charInfo.scss'\n\nconst CharInfo = props => {\n\tconst [char, setChar] = useState(null)\n\tconst { loading, error, getCharacter, clearError } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\t\tclearError()\n\t\tgetCharacter(charId).then(onCharLoaded);\n\t}\n\n\tconst onCharLoaded = char => {\n\t\tsetChar(char)\n\t}\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />\n\tconst spinner = loading ? <Spinner /> : null\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{spinner}\n\t\t\t{errorMessage}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (\n\t\tthumbnail ===\n\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t) {\n\t\timgStyle = { objectFit: 'contain', heigth: '160px', width: '160px' }\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0 ? null : 'There is comics for this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link to={`/comics/${item.resourceURI.split('/').pop()}`} className='char__comics-item' key={i}>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo\n","import { useState, useEffect, useRef } from 'react'\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errors/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\nimport './charList.scss'\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, []);\n\t\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = newCharList => {\n\t\tlet ended = false\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true\n\t\t}\n\t\tsetCharList(charList => [...charList, ...newCharList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset => offset + 9)\n\t\tsetCharEnded(ended)\n\t}\n\n\tconst itemsRef = useRef([]);\n\n\tconst focusOnItem = id => {\n\t\titemsRef.current.forEach(item => item.classList.remove('char__item_selected'))\n\t\titemsRef.current[id].classList.add('char__item_selected')\n\t\titemsRef.current[id].focus()\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' }\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: 'unset' }\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => itemsRef.current[i] = el}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick=    {() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\treturn <ul className='char__grid'>{items}</ul>\n\t}\n\n\tconst items = renderItems(charList);\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n};\n\nexport default CharList\n","import { useState, useEffect } from 'react'\nimport mjolnir from '../../resources/img/mjolnir.png'\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errors/ErrorMessage'\nimport './randomChar.scss'\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 60000)\n\t\treturn () => {\n\t\t\tclearInterval(timerId)\n\t\t}\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char)\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError()\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id)\n\t\t\t\t.then(onCharLoaded);\n\t};\n\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst content = !(loading || error) ? <View char={char}/> : null;\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{spinner}\n\t\t\t{errorMessage}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button className='button button__main' onClick={updateChar}>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt='mjolnir' className='randomchar__decoration' />\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nconst View = ({char}) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = {'objectFit' : 'cover'};\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\timgStyle = {'objectFit' : 'contain'};\n\t}\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{description}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState } from 'react'\r\nimport CharInfo from '../charInfo/CharInfo'\r\nimport CharList from '../charList/CharList'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\nimport RandomChar from '../randomChar/RandomChar'\r\n\r\nimport decoration from '../../resources/img/vision.png'\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null)\r\n\r\n\tfunction onCharSelected(id) {\r\n\t\tsetChar(selectedChar => id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = (e) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, \r\n\theaders = {'Content-Type': 'application/json'}) => {\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn data\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetError(error.message)\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null)\r\n\t}, [])\r\n\r\n\treturn {loading, request, error, clearError}\r\n};\r\n\r\nexport default useHttp","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=13fce9aab4e28128f7b9d466dbd48844'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 150)}...`\r\n\t\t\t\t: 'Sorry...There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items ? char.comics.items.slice(0, 10) : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description\r\n\t\t\t\t? `${comics.description.slice(0, 35)}...`\r\n\t\t\t\t: 'Sorry...There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService\r\n"],"names":["ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","errInfo","console","log","this","setState","render","_jsx","ErrorMessage","props","children","className","src","img","alt","Skeleton","_jsxs","_Fragment","View","_ref","char","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","heigth","width","style","href","length","map","item","i","Link","to","concat","resourceURI","split","pop","setChar","useState","loading","getCharacter","clearError","useMarvelService","useEffect","updateChar","charId","then","onCharLoaded","skeleton","spinner","Spinner","errorMessage","content","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","itemsRef","useRef","focusOnItem","id","current","forEach","classList","remove","add","focus","items","arr","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","RandomChar","timerId","setInterval","clearInterval","Math","floor","random","mjolnir","MainPage","selectedChar","CharList","CharInfo","decoration","setLoading","setError","request","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","status","data","json","message","useHttp","_apiBase","_apiKey","_transformCharacter","slice","path","extension","urls","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","results","res","getAllComics","getComic"],"sourceRoot":""}