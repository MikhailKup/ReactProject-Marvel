{"version":3,"file":"static/js/692.156ee56f.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/errors/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Component } from 'react'\r\nimport ErrorMessage from '../errors/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(err, errInfo) {\r\n\t\tconsole.log(err, errInfo)\r\n\t\tthis.setState({ error: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import img from './error.gif'\r\nimport './ErrorMessage.scss'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<div className=\"error-message\">\r\n\t\t\t<img src={img} alt=\"Error\" className='error-message'/>\r\n\t\t</div>\r\n  )\r\n};\r\n\r\nexport default ErrorMessage","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errors/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n    useEffect(() => {\n\t\tonRequest(offset, true)\n\t}, []);\n\t\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = newComicsList => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset => offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.description}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n\t\t\t)\n\t\t})\n\t\treturn <ul className='comics__grid'>{items}</ul>\n\t}\n\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<div className='comics'>\r\n\t\t\t<AppBanner />\r\n\t\t\t<main>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<ComicsList></ComicsList>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = (e) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, \r\n\theaders = {'Content-Type': 'application/json'}) => {\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn data\r\n\t\t} catch (error) {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetError(error.message)\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null)\r\n\t}, [])\r\n\r\n\treturn {loading, request, error, clearError}\r\n};\r\n\r\nexport default useHttp","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=13fce9aab4e28128f7b9d466dbd48844'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async id => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async id => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = char => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 150)}...`\r\n\t\t\t\t: 'Sorry...There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items ? char.comics.items.slice(0, 10) : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = comics => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description\r\n\t\t\t\t? `${comics.description.slice(0, 35)}...`\r\n\t\t\t\t: 'Sorry...There is no description',\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","errInfo","console","log","this","setState","render","ErrorMessage","props","img","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","Link","to","concat","id","thumbnail","name","description","price","renderItems","errorMessage","spinner","Spinner","disabled","style","display","onClick","ComicsPage","ComicsList","e","setLoading","setError","request","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","status","data","json","message","clearError","useHttp","_apiBase","_apiKey","_transformCharacter","char","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getComic"],"sourceRoot":""}